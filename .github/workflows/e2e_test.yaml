name: "E2E Deployment testing workflow"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  delivery_stages:

     runs-on: [ E2E-test-linux ]

     steps:
      - name: install
        run: |
          sudo apt-get update
          sudo apt-get install -qqy awscli jq openjdk-11-jdk
      - name: unit testing
        run: |
          echo "unit testing stage"
      - name: build
        run: |
          echo "build stage"
      - name: pop
        run: |
          echo "Pop stage"
      - name: download e2e artifacts
        run: |
          aws s3 cp --recursive s3://e2e-integrations-test/e2e-artifacts/integrations integrations --no-progress
          ls -al
          aws s3 cp s3://e2e-integrations-test/e2e-artifacts/test-integrations-0.0.1-SNAPSHOT.jar test-integrations-0.0.1-SNAPSHOT.jar --no-progress
          ls -al    
      
      
  e2e_linux_executions:
    
      needs: delivery_stages         
      runs-on: [ E2E-test-linux ]

      steps:
      - name: e2e_tests_linux
        run: |
           echo "E2E Tests for Linux"
           exit 1

      - name: Archive results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-output
          path: test-output


  e2e_mac_executions:

      needs: delivery_stages
      runs-on: [ E2E-test-linux ]

      steps:
      
      - name: e2e_tests_mac
        run: echo "E2E Tests for Mac"

      - name: Archive results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-output
          path: test-output
              
  e2e_windows_executions:
    
      needs: delivery_stages
      runs-on: [ E2E-test-linux ]

      steps:
      - name: e2e_tests_windows
        run: |
           echo "E2E Tests for Windows"
           exit 1
        
      - name: Archive results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-output
          path: test-output
      

  post_e2e_executions:

      needs: [e2e_linux_executions, e2e_mac_executions, e2e_windows_executions]
      if: always()
      runs-on: [ E2E-test-linux ]

      steps:

      - name: publish
        run: |
          echo "publish stage"  

